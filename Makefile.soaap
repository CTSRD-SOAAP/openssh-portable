SOAAP_ROOT?=$(CURDIR)/..
LLVM_BUILD_DIR?=$(SOAAP_ROOT)/llvm/release-build
SOAAP_BUILD_DIR?=$(SOAAP_ROOT)/soaap/release-build
LLVM_LINK?=$(LLVM_BUILD_DIR)/bin/llvm-link
BITCODE_LIBDIR?=/home/alex/devel/soaap/bitcode

SOAAP?=$(SOAAP_BUILD_DIR)/bin/soaap
# TODO: remove -soaap-skip-global-variable-analysis in the future
SOAAP_DEFAULT_OPTIONS?=-soaap-infer-fp-targets -soaap-sandbox-platform=capsicum -soaap-analyses=vulnerability,syscalls,privcalls,sandboxed,infoflow
SOAAP_OPTIONS?=
SOAAP_FULL_ANALYSIS_OPTIONS?=-soaap-analyses=vulnerability,syscalls,privcalls,sandboxed,infoflow -soaap-list-fp-targets -soaap-list-sandboxed-funcs -soaap-dump-rpc-graph -soaap-output-traces=all -soaap-mode=all

SSHD_REQUIRED_LIBS= \
    $(BITCODE_LIBDIR)/libc.so.bc \
    $(BITCODE_LIBDIR)/libutil.a.bc \
    $(BITCODE_LIBDIR)/libcrypt.a.bc \
    $(BITCODE_LIBDIR)/libz.so.bc \
    $(BITCODE_LIBDIR)/libcrypto.so.bc \
    $(BITCODE_LIBDIR)/libssl.so.bc \
    --override openbsd-compat/libopenbsd-compat.a.bc \
    --override libssh.a.bc

# adding opebsd-compat.a.bc -> multiple def of opterr
# adding libssh.a.bc causes multiple def of log
# -> we need the override flag

# if configure was called correctly plain make is sufficient
# but for now always use the wrapper script
LLVM_IR_MAKE?=make-for-llvm-ir.py

.PHONY: all clean soaap soaap-json soaap-all soaap-all-json

all: sshd_executable.bc
	@echo
soaap: sshd_executable.bc
	$(SOAAP) -o sshd.soaap $^ $(SOAAP_DEFAULT_OPTIONS) $(SOAAP_OPTIONS)
soaap-json: sshd_executable.bc
	$(SOAAP) -o sshd.soaap $^ $(SOAAP_DEFAULT_OPTIONS) $(SOAAP_OPTIONS) -soaap-report-output-formats=json
soaap-all: sshd_executable.bc
	$(SOAAP) -o sshd.soaap $^ $(SOAAP_DEFAULT_OPTIONS) $(SOAAP_OPTIONS) $(SOAAP_FULL_ANALYSIS_OPTIONS)
soaap-all-json: sshd_executable.bc
	$(SOAAP) -o sshd.soaap $^ $(SOAAP_DEFAULT_OPTIONS) $(SOAAP_OPTIONS) $(SOAAP_FULL_ANALYSIS_OPTIONS) -soaap-report-output-formats=json

clean:
	rm -f *.bc openbsd-compat/*.bc sshd.soaap

sshd_executable.bc: sshd.bc libssh.a.bc openbsd-compat/libopenbsd-compat.a.bc
	$(LLVM_LINK) -o $@ $(SSHD_REQUIRED_LIBS)
sshd.bc:
	$(LLVM_IR_MAKE) sshd $(MAKEFLAGS)
libssh.a.bc:
	$(LLVM_IR_MAKE) libssh.a $(MAKEFLAGS)
openbsd-compat/libopenbsd-compat.a.bc:
	$(LLVM_IR_MAKE) openbsd-compat/libopenbsd-compat.a $(MAKEFLAGS)

